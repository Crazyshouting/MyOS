; 硬盘写入位置和LBA地址

LOADER_BASE_ADDR equ 0x900
LOADER_START_SECTOR equ 0x2
PAGE_DIR_TABLE_POS equ 0x100000
; gdt 属性描述
DESC_G_4K equ 1_000_00000000000000000000b ; 段描述符 G, D/B, L定义，内存粒度
DESC_D_32 equ  1_000_0000000000000000000b
DESC_L    equ   0_000_000000000000000000b ; 64位代码标记
DESC_AVL  equ     0_00000000000000000000b
DESC_LIMIT_CODE2 equ 1111_0000000000000000b
DESC_LIMIT_DATA2 equ DESC_LIMIT_CODE2
DESC_LIMIT_VIDEO2 equ 0000_0000000000000000b
DESC_P equ 1_000000000000000b ; 表示该段在内存中是否存在
DESC_DPL_0 equ 00_0000000000000b
DESC_DPL_1 equ 01_0000000000000b
DESC_DPL_2 equ 10_0000000000000b
DESC_DPL_3 equ 11_0000000000000b ; 数据/代码段的权限
DESC_S_CODE equ  1_000000000000b
DESC_S_DATA equ  DESC_S_CODE
DESC_S_sys equ   0_000000000000b
DESC_TYPE_CODE equ 1000_00000000b ; 段的type，描述段的类型 x=1, c=0, r=0, a=0，表示可执行，非一致性，不可读，访问位清0
DESC_TYPE_DATA equ 0010_00000000b ; S数据段，不可执行，非一致性，可读，访问位清0，cpu访问后置位1，访问后OS将其置为0，后续可继续访问
; 定义三个段的段描述符高4字节
DESC_CODE_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_CODE2 + DESC_P + DESC_DPL_0 + DESC_S_CODE + DESC_TYPE_CODE + 0x00
DESC_DATA_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_DATA2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x00
DESC_VIDEO_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_VIDEO2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x0B

; 选择子属性，选择子，16位，低2位表示权限，第3位表示使用 GDT 还是 LDT，在lldt中加载选择子，作为索引在gdt中找到段描述符，进行寻址等操作
RPL0 equ 00b
RPL1 equ 01b
RPL2 equ 10b
RPL3 equ 11b
TI_GDT equ 000b
TI_LDT equ 100b

PT_NULL equ 0x00000000
KERNEL_ENTRY_POINT equ 0xc0001500
; -------页表属性
PG_P equ 1b
PG_RW_R equ 00b 
PG_RW_W equ 10b
PG_US_S equ 000b
PG_US_U equ 100b

KERNEL_START_SECTOR equ 0x9
KERNEL_BIN_BASE_ADDR equ 0x70000
